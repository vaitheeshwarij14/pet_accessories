{"ast":null,"code":"var _jsxFileName = \"D:\\\\3yr\\\\academic\\\\Mini_project_hr\\\\ordering\\\\ordering_V2\\\\pet_accessories\\\\frontend\\\\src\\\\Context\\\\Shopcontext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Shopcontext = /*#__PURE__*/createContext();\nconst ShopProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [all_product, setAllProduct] = useState([]);\n  const getUserIdFromToken = token => {\n    try {\n      var _payload$user;\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      return (_payload$user = payload.user) === null || _payload$user === void 0 ? void 0 : _payload$user.id;\n    } catch (error) {\n      console.error('Error parsing auth token:', error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const fetchCartOnLogin = () => {\n      const token = localStorage.getItem('auth-token');\n      const userId = getUserIdFromToken(token);\n      console.log('Retrieved User ID from token:');\n      if (userId) {\n        const cartKey = `cart_${userId}`;\n        const savedCart = JSON.parse(localStorage.getItem(cartKey)) || [];\n        console.log(`Trying to load cart from localStorage with key:`, savedCart);\n        setCart(savedCart);\n      } else {\n        console.error('No user ID found. Cart will not be loaded.');\n      }\n    };\n    fetchCartOnLogin();\n    window.addEventListener('storage', fetchCartOnLogin);\n    return () => {\n      window.removeEventListener('storage', fetchCartOnLogin);\n    };\n  }, []);\n  const addToCart = item => {\n    const token = localStorage.getItem('auth-token');\n    const userId = getUserIdFromToken(token);\n    console.log('Retrieved User ID for adding to cart:');\n    if (!userId) {\n      console.error('User not logged in, cannot add to cart.');\n      return;\n    }\n    setCart(prevCart => {\n      const itemInCart = prevCart.find(cartItem => cartItem.id === item.id);\n      let updatedCart;\n      if (itemInCart) {\n        updatedCart = prevCart.map(cartItem => cartItem.id === item.id ? {\n          ...cartItem,\n          quantity: cartItem.quantity + 1\n        } : cartItem);\n      } else {\n        updatedCart = [...prevCart, {\n          ...item,\n          quantity: 1\n        }];\n      }\n      const cartKey = `cart_${userId}`;\n      localStorage.setItem(cartKey, JSON.stringify(updatedCart));\n      console.log(`Updated cart in localStorage with key ${cartKey}:`, updatedCart);\n      return updatedCart;\n    });\n  };\n  const updateCartItemWeight = (itemId, newWeight) => {\n    setCart(prevCart => prevCart.map(item => item.id === itemId ? {\n      ...item,\n      weight: newWeight\n    } : item));\n  };\n  const updateCartItemQuantity = (itemId, newQuantity) => {\n    setCart(prevCart => prevCart.map(item => item.id === itemId ? {\n      ...item,\n      quantity: newQuantity\n    } : item));\n  };\n  const removeFromCart = itemId => {\n    const token = localStorage.getItem('auth-token');\n    const userId = getUserIdFromToken(token);\n    console.log('Retrieved User ID for removing from cart:');\n    if (!userId) {\n      console.error('User not logged in, cannot remove from cart.');\n      return;\n    }\n    setCart(prevCart => {\n      const updatedCart = prevCart.filter(item => item.id !== itemId);\n      const cartKey = `cart_${userId}`;\n      localStorage.setItem(cartKey, JSON.stringify(updatedCart));\n      console.log(`Updated cart in localStorage with key ${cartKey}:`, updatedCart);\n      return updatedCart;\n    });\n  };\n  const fetchProducts = async category => {\n    try {\n      const url = category ? `http://localhost:5000/allproducts?category=${category}` : 'http://localhost:5000/allproducts';\n      const response = await fetch(url);\n      const data = await response.json();\n      setAllProduct(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Shopcontext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      updateCartItemWeight,\n      updateCartItemQuantity,\n      removeFromCart,\n      all_product,\n      fetchProducts\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopProvider, \"O4M4rNOhe32m2hM/gZrm2ii+Yjs=\");\n_c = ShopProvider;\nexport default ShopProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","Shopcontext","ShopProvider","children","_s","cart","setCart","all_product","setAllProduct","getUserIdFromToken","token","_payload$user","payload","JSON","parse","atob","split","user","id","error","console","fetchCartOnLogin","localStorage","getItem","userId","log","cartKey","savedCart","window","addEventListener","removeEventListener","addToCart","item","prevCart","itemInCart","find","cartItem","updatedCart","map","quantity","setItem","stringify","updateCartItemWeight","itemId","newWeight","weight","updateCartItemQuantity","newQuantity","removeFromCart","filter","fetchProducts","category","url","response","fetch","data","json","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/3yr/academic/Mini_project_hr/ordering/ordering_V2/pet_accessories/frontend/src/Context/Shopcontext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const Shopcontext = createContext();\r\n\r\nconst ShopProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [all_product, setAllProduct] = useState([]);\r\n  const getUserIdFromToken = (token) => {\r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      return payload.user?.id; \r\n    } catch (error) {\r\n      console.error('Error parsing auth token:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchCartOnLogin = () => {\r\n      const token = localStorage.getItem('auth-token'); \r\n      const userId = getUserIdFromToken(token); \r\n      console.log('Retrieved User ID from token:');\r\n\r\n      if (userId) {\r\n        const cartKey = `cart_${userId}`; \r\n        const savedCart = JSON.parse(localStorage.getItem(cartKey)) || [];\r\n        console.log(`Trying to load cart from localStorage with key:`, savedCart);\r\n        setCart(savedCart);\r\n      } else {\r\n        console.error('No user ID found. Cart will not be loaded.');\r\n      }\r\n    };\r\n\r\n    fetchCartOnLogin();\r\n\r\n    window.addEventListener('storage', fetchCartOnLogin); \r\n    return () => {\r\n      window.removeEventListener('storage', fetchCartOnLogin);\r\n    };\r\n  }, []);\r\n\r\n  const addToCart = (item) => {\r\n    const token = localStorage.getItem('auth-token');\r\n    const userId = getUserIdFromToken(token);\r\n    console.log('Retrieved User ID for adding to cart:');\r\n\r\n    if (!userId) {\r\n      console.error('User not logged in, cannot add to cart.');\r\n      return;\r\n    }\r\n\r\n    setCart((prevCart) => {\r\n      const itemInCart = prevCart.find((cartItem) => cartItem.id === item.id);\r\n      let updatedCart;\r\n\r\n      if (itemInCart) {\r\n        updatedCart = prevCart.map((cartItem) =>\r\n          cartItem.id === item.id\r\n            ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n            : cartItem\r\n        );\r\n      } else {\r\n        updatedCart = [...prevCart, { ...item, quantity: 1 }];\r\n      }\r\n\r\n      const cartKey = `cart_${userId}`; \r\n      localStorage.setItem(cartKey, JSON.stringify(updatedCart));\r\n      console.log(`Updated cart in localStorage with key ${cartKey}:`, updatedCart);\r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  const updateCartItemWeight = (itemId, newWeight) => {\r\n    setCart((prevCart) =>\r\n      prevCart.map((item) =>\r\n        item.id === itemId ? { ...item, weight: newWeight } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateCartItemQuantity = (itemId, newQuantity) => {\r\n    setCart((prevCart) =>\r\n      prevCart.map((item) =>\r\n        item.id === itemId ? { ...item, quantity: newQuantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    const token = localStorage.getItem('auth-token'); \r\n    const userId = getUserIdFromToken(token);\r\n    console.log('Retrieved User ID for removing from cart:');\r\n\r\n    if (!userId) {\r\n      console.error('User not logged in, cannot remove from cart.');\r\n      return;\r\n    }\r\n\r\n    setCart((prevCart) => {\r\n      const updatedCart = prevCart.filter((item) => item.id !== itemId);\r\n\r\n      const cartKey = `cart_${userId}`; \r\n      localStorage.setItem(cartKey, JSON.stringify(updatedCart));\r\n      console.log(`Updated cart in localStorage with key ${cartKey}:`, updatedCart);\r\n      return updatedCart;\r\n    });\r\n  };\r\n\r\n  const fetchProducts = async (category) => {\r\n    try {\r\n      const url = category ? `http://localhost:5000/allproducts?category=${category}` : 'http://localhost:5000/allproducts';\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      setAllProduct(data);\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts(); \r\n  }, []);\r\n\r\n  return (\r\n    <Shopcontext.Provider\r\n      value={{\r\n        cart,\r\n        addToCart,\r\n        updateCartItemWeight,\r\n        updateCartItemQuantity,\r\n        removeFromCart,\r\n        all_product,\r\n        fetchProducts,\r\n      }}\r\n    >\r\n      {children}\r\n    </Shopcontext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,WAAW,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAMY,kBAAkB,GAAIC,KAAK,IAAK;IACpC,IAAI;MAAA,IAAAC,aAAA;MACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,QAAAL,aAAA,GAAOC,OAAO,CAACK,IAAI,cAAAN,aAAA,uBAAZA,aAAA,CAAcO,EAAE;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO,IAAI;IACb;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,MAAMuB,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,MAAMX,KAAK,GAAGY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAChD,MAAMC,MAAM,GAAGf,kBAAkB,CAACC,KAAK,CAAC;MACxCU,OAAO,CAACK,GAAG,CAAC,+BAA+B,CAAC;MAE5C,IAAID,MAAM,EAAE;QACV,MAAME,OAAO,GAAG,QAAQF,MAAM,EAAE;QAChC,MAAMG,SAAS,GAAGd,IAAI,CAACC,KAAK,CAACQ,YAAY,CAACC,OAAO,CAACG,OAAO,CAAC,CAAC,IAAI,EAAE;QACjEN,OAAO,CAACK,GAAG,CAAC,iDAAiD,EAAEE,SAAS,CAAC;QACzErB,OAAO,CAACqB,SAAS,CAAC;MACpB,CAAC,MAAM;QACLP,OAAO,CAACD,KAAK,CAAC,4CAA4C,CAAC;MAC7D;IACF,CAAC;IAEDE,gBAAgB,CAAC,CAAC;IAElBO,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAER,gBAAgB,CAAC;IACpD,OAAO,MAAM;MACXO,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAET,gBAAgB,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,SAAS,GAAIC,IAAI,IAAK;IAC1B,MAAMtB,KAAK,GAAGY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,MAAMC,MAAM,GAAGf,kBAAkB,CAACC,KAAK,CAAC;IACxCU,OAAO,CAACK,GAAG,CAAC,uCAAuC,CAAC;IAEpD,IAAI,CAACD,MAAM,EAAE;MACXJ,OAAO,CAACD,KAAK,CAAC,yCAAyC,CAAC;MACxD;IACF;IAEAb,OAAO,CAAE2B,QAAQ,IAAK;MACpB,MAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAAClB,EAAE,KAAKc,IAAI,CAACd,EAAE,CAAC;MACvE,IAAImB,WAAW;MAEf,IAAIH,UAAU,EAAE;QACdG,WAAW,GAAGJ,QAAQ,CAACK,GAAG,CAAEF,QAAQ,IAClCA,QAAQ,CAAClB,EAAE,KAAKc,IAAI,CAACd,EAAE,GACnB;UAAE,GAAGkB,QAAQ;UAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAG;QAAE,CAAC,GAChDH,QACN,CAAC;MACH,CAAC,MAAM;QACLC,WAAW,GAAG,CAAC,GAAGJ,QAAQ,EAAE;UAAE,GAAGD,IAAI;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MACvD;MAEA,MAAMb,OAAO,GAAG,QAAQF,MAAM,EAAE;MAChCF,YAAY,CAACkB,OAAO,CAACd,OAAO,EAAEb,IAAI,CAAC4B,SAAS,CAACJ,WAAW,CAAC,CAAC;MAC1DjB,OAAO,CAACK,GAAG,CAAC,yCAAyCC,OAAO,GAAG,EAAEW,WAAW,CAAC;MAC7E,OAAOA,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,oBAAoB,GAAGA,CAACC,MAAM,EAAEC,SAAS,KAAK;IAClDtC,OAAO,CAAE2B,QAAQ,IACfA,QAAQ,CAACK,GAAG,CAAEN,IAAI,IAChBA,IAAI,CAACd,EAAE,KAAKyB,MAAM,GAAG;MAAE,GAAGX,IAAI;MAAEa,MAAM,EAAED;IAAU,CAAC,GAAGZ,IACxD,CACF,CAAC;EACH,CAAC;EAED,MAAMc,sBAAsB,GAAGA,CAACH,MAAM,EAAEI,WAAW,KAAK;IACtDzC,OAAO,CAAE2B,QAAQ,IACfA,QAAQ,CAACK,GAAG,CAAEN,IAAI,IAChBA,IAAI,CAACd,EAAE,KAAKyB,MAAM,GAAG;MAAE,GAAGX,IAAI;MAAEO,QAAQ,EAAEQ;IAAY,CAAC,GAAGf,IAC5D,CACF,CAAC;EACH,CAAC;EAED,MAAMgB,cAAc,GAAIL,MAAM,IAAK;IACjC,MAAMjC,KAAK,GAAGY,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,MAAMC,MAAM,GAAGf,kBAAkB,CAACC,KAAK,CAAC;IACxCU,OAAO,CAACK,GAAG,CAAC,2CAA2C,CAAC;IAExD,IAAI,CAACD,MAAM,EAAE;MACXJ,OAAO,CAACD,KAAK,CAAC,8CAA8C,CAAC;MAC7D;IACF;IAEAb,OAAO,CAAE2B,QAAQ,IAAK;MACpB,MAAMI,WAAW,GAAGJ,QAAQ,CAACgB,MAAM,CAAEjB,IAAI,IAAKA,IAAI,CAACd,EAAE,KAAKyB,MAAM,CAAC;MAEjE,MAAMjB,OAAO,GAAG,QAAQF,MAAM,EAAE;MAChCF,YAAY,CAACkB,OAAO,CAACd,OAAO,EAAEb,IAAI,CAAC4B,SAAS,CAACJ,WAAW,CAAC,CAAC;MAC1DjB,OAAO,CAACK,GAAG,CAAC,yCAAyCC,OAAO,GAAG,EAAEW,WAAW,CAAC;MAC7E,OAAOA,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMa,aAAa,GAAG,MAAOC,QAAQ,IAAK;IACxC,IAAI;MACF,MAAMC,GAAG,GAAGD,QAAQ,GAAG,8CAA8CA,QAAQ,EAAE,GAAG,mCAAmC;MACrH,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClChD,aAAa,CAAC+C,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOpC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACdoD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElD,OAAA,CAACC,WAAW,CAACwD,QAAQ;IACnBC,KAAK,EAAE;MACLrD,IAAI;MACJ0B,SAAS;MACTW,oBAAoB;MACpBI,sBAAsB;MACtBE,cAAc;MACdzC,WAAW;MACX2C;IACF,CAAE;IAAA/C,QAAA,EAEDA;EAAQ;IAAAwD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1D,EAAA,CAtIIF,YAAY;AAAA6D,EAAA,GAAZ7D,YAAY;AAwIlB,eAAeA,YAAY;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}